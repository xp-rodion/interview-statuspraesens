# Generated by Django 3.1rc1 on 2020-11-18 06:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Уникальный идентификатор')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(max_length=32, null=True, unique=True, verbose_name='phone')),
                ('name', models.CharField(blank=True, max_length=128, verbose_name='Имя')),
                ('short_name', models.CharField(blank=True, default='', max_length=12, verbose_name='Краткое имя')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=4096, verbose_name='Наименование')),
                ('code', models.CharField(blank=True, max_length=256, verbose_name='Код')),
                ('extra_json', models.JSONField(blank=True, default=dict, verbose_name='Extra JSON')),
                ('eng_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Код (eng)')),
                ('inn', models.CharField(blank=True, max_length=32, null=True, verbose_name='ИНН')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Когда создан')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Когда изменён')),
                ('key', models.CharField(max_length=64, verbose_name='Токен')),
                ('key_type', models.SmallIntegerField(choices=[(39, 'Token39'), (16, 'Token16'), (17, 'Token17'), (1, 'TokenTmp')], default=39, verbose_name='Тип')),
                ('expire', models.DateTimeField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'черновой'), (2, 'на проверке'), (3, 'активен'), (4, 'отключен')], default=1, verbose_name='Статус')),
                ('verify_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Код подтверждения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to=settings.AUTH_USER_MODEL, verbose_name='Токены')),
            ],
            options={
                'unique_together': {('key_type', 'key')},
            },
        ),
    ]
